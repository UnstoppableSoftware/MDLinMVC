<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<main class="mdl-layout__content">
<div class="mdl-grid">
    <div class="mdl-cell mdl-cell--12-col">
<h2><#= ViewName#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="mdl-data-table mdl-js-data-table mdl-shadow--4dp">
	<thead>
		<tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
			// We do not want to show any association properties for which there is
			// no associated foreign key.
			if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
			    continue;
			}
#>
			<th>
			    @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
			</th>
<#
    }
}
#>
			<th></th>
		</tr>
	</thead>
	<tbody>
@foreach (var item in Model) {
		<tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
			// We do not want to show any association properties for which there is
			// no associated foreign key.
			if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
			    continue;
			}
#>
			<td>
			    @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
			</td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
			<td class="mdl-data-table__cell--non-numeric">
				<a href="@Url.Action("Edit", new { id = item.<#= pkName #> })">
                        <i class="material-icons md-light">mode_edit</i>
                </a>
				<a href="@Url.Action("Details", new { id = item.<#= pkName #> })">
                        <i class="material-icons md-light">note</i>
                </a>
				<a href="@Url.Action("Delete", new { id = item.<#= pkName #> })">
                        <i class="material-icons md-light">delete</i>
                </a>
			</td>
<#
} else {
#>
			<td class="mdl-data-table__cell--non-numeric">
				<a href="@Url.Action("Edit", new { id = item.PrimaryKey })">
                        <i class="material-icons md-light">mode_edit</i>
                </a>
				<a href="@Url.Action("Details", new { id = item.PrimaryKey })">
                        <i class="material-icons md-light">note</i>
                </a>
				<a href="@Url.Action("Delete", new { id = item.PrimaryKey })">
                        <i class="material-icons md-light">delete</i>
                </a>
			</td>
<#
}
#>
		</tr>
}
	</tbody>
</table>
</div>
</div>
</main>

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>